{"version":3,"sources":["components/Title.jsx","utils/index.js","constants/index.js","components/Navigation.jsx","components/Field.jsx","components/Button.jsx","components/ManipulationPanel.jsx","hooks/useSnakeGame.js","App.js","reportWebVitals.js","index.js"],"names":["Title","className","getFoodPosition","fieldSize","excludes","x","Math","floor","random","y","some","item","initFields","snake","fields","i","cols","Array","fill","push","food","initialPosition","initialValues","Difficulty","GameStatus","Object","freeze","init","playing","suspended","gameover","Direction","up","right","left","down","DirectionKeyCodeMap","37","38","39","40","OppositeDirection","Delta","Navigation","length","difficulty","onChangeDifficulty","upVisiblity","downVisibility","onClick","Field","map","row","column","Button","status","onStart","onStop","onRestart","ManipulationPanel","onChange","timer","unsubscribe","clearInterval","useSnakeGame","useState","setFields","body","setBody","setStatus","direction","setDirection","setDifficulty","tick","setTick","useEffect","setInterval","handleMoving","updateDirection","useCallback","newDirection","updateDifficulty","handleKeyDown","e","keyCode","document","addEventListener","removeEventListener","delta","newPosition","position","isCollision","isEatingMyself","newBody","removingTrack","pop","unshift","start","stop","reload","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.68272979.chunk.js","sourcesContent":["import React from 'react';\n\nconst Title = () => {\n    return (\n        <div className=\"title-container\">\n            <h1 className=\"title\">Snake Game</h1>\n        </div>\n    );\n};\n\nexport default Title;","export const getFoodPosition = (fieldSize, excludes) => {\n    while (true) {\n        const x = Math.floor(Math.random() * (fieldSize - 1 - 1)) + 1;\n        const y = Math.floor(Math.random() * (fieldSize - 1 - 1)) + 1;\n        const conflict = excludes.some(item => item.x === x && item.y === y)\n\n        if (!conflict) {\n            return { x, y };\n        }\n    }\n}\n\nexport const initFields = (fieldSize, snake) => {\n    const fields = []\n    for (let i = 0; i < fieldSize; i++) {\n        const cols = new Array(fieldSize).fill('')\n        fields.push(cols)\n    }\n    fields[snake.y][snake.x] = 'snake'\n\n    const food = getFoodPosition(fieldSize, [snake])\n    fields[food.y][food.x] = 'food'\n\n    return fields\n}\n\nexport const isCollision = (fieldSize, position) => {\n    if (position.y < 0 || position.x < 0) {\n        // x, y のどちらかの座標がマイナスの値 の時\n        return true;\n    }\n\n    if (position.y > fieldSize - 1 || position.x > fieldSize - 1) {\n        // x, y のどちらかの座標がフィールドサイズを超えてしまっている時\n        return true;\n    }\n\n    return false;\n};\n\nexport const isEatingMyself = (fields, position) => {\n    return fields[position.y][position.x] === 'snake'\n}","import { initFields } from '../utils';\n\nconst fieldSize = 35;\nexport const initialPosition = { x: 17, y: 17 };\nexport const initialValues = initFields(fieldSize, initialPosition);\nexport const defaultInterval = 100;\nexport const defaultDifficulty = 3;\n\nexport const Difficulty = [1000, 500, 100, 50, 10];\n\nexport const GameStatus = Object.freeze({\n    init: 'init',\n    playing: 'playing',\n    suspended: 'suspended',\n    gameover: 'gameover',\n});\n\nexport const Direction = Object.freeze({\n    up: 'up',\n    right: 'right',\n    left: 'left',\n    down: 'down',\n});\n\nexport const DirectionKeyCodeMap = Object.freeze({\n    37: Direction.left,\n    38: Direction.up,\n    39: Direction.right,\n    40: Direction.down,\n});\n\nexport const OppositeDirection = Object.freeze({\n    up: 'down',\n    right: 'left',\n    left: 'right',\n    down: 'up',\n});\n\nexport const Delta = Object.freeze({\n    up: { x: 0, y: -1 },\n    right: { x: 1, y: 0 },\n    left: { x: -1, y: 0 },\n    down: { x: 0, y: 1 },\n});","import React from 'react';\nimport { defaultDifficulty, Difficulty } from '../constants';\n\nconst Navigation = ({ length, difficulty = defaultDifficulty, onChangeDifficulty }) => {\n\n    const upVisiblity = difficulty < Difficulty.length ? '' : 'is-hidden'\n    const downVisibility = difficulty > 1 ? '' : 'is-hidden'\n    const onUpDifficulty = () => onChangeDifficulty(difficulty + 1)\n    const onDownDifficulty = () => onChangeDifficulty(difficulty - 1)\n    return (\n        <div className=\"navigation\">\n            <div className=\"navigation-item\">\n                <span className=\"navigation-label\">Lenget: </span>\n                <div className=\"navigartion-item-number-container\">\n                    <div className=\"num-board\">{length}</div>\n                </div>\n            </div>\n            <div className=\"navigation-item\">\n                <span className=\"navigation-label\">Difficulty: </span>\n                <div className=\"navigartion-item-number-container\">\n                    <span className=\"num-board\">{difficulty}</span>\n                    <div className=\"difficulty-button-container\">\n                        <div\n                            className={`difficulty-button difficulty-up ${upVisiblity}`}\n                            onClick={onUpDifficulty}\n                        ></div>\n                        <div\n                            className={`difficulty-button difficulty-down ${downVisibility}`}\n                            onClick={onDownDifficulty}\n                        ></div>\n                    </div>\n                </div>\n            </div>\n\n        </div>\n    )\n};\n\nexport default Navigation;","import React from 'react';\n\nconst Field = ({ fields }) => {\n    return (\n        <div className=\"field\">\n            {\n                fields.map((row => {\n                    return row.map((column) => {\n                        return <div className={`dots ${column}`}></div>\n                    })\n                }))\n            }\n        </div>\n\n    );\n};\n\nexport default Field;","import React from 'react';\nimport { GameStatus } from '../constants'\n\n\nconst Button = ({ status, onStart, onStop, onRestart }) => {\n    return (\n        <div className=\"button\">\n            {status === GameStatus.gameover && <button className=\"btn btn-gameover\" onClick={onRestart}>gameover</button>}\n            {status === GameStatus.init && <button className=\"btn btn-init\" onClick={onStart}>start</button>}\n            {status === GameStatus.suspended && <button className=\"btn btn-suspended\" onClick={onStart}>start</button>}\n            {status === GameStatus.playing && <button className=\"btn btn-playing\" onClick={onStop}>stop</button>}\n        </div>\n    );\n};\n\nexport default Button;","import React from 'react';\nimport { Direction } from '../constants';\n\nconst ManipulationPanel = ({ onChange }) => {\n\n    const onUp = () => onChange(Direction.up)\n    const onRight = () => onChange(Direction.right)\n    const onLeft = () => onChange(Direction.left)\n    const onDown = () => onChange(Direction.down)\n\n    return (\n        <div className=\"manipulation-panel\">\n            <button className=\"manipulation-btn btn btn-left\" onClick={onLeft}>←</button>\n            <div>\n                <button className=\"manipulation-btn btn btn-up\" onClick={onUp}>↑</button>\n                <button className=\"manipulation-btn btn btn-down\" onClick={onDown}>↓</button>\n            </div>\n            <button className=\"manipulation-btn btn btn-right\" onClick={onRight}>→</button>\n        </div>\n\n    );\n};\n\nexport default ManipulationPanel;","import { useCallback, useEffect, useState } from 'react';\nimport {\n    defaultInterval,\n    defaultDifficulty,\n    initialPosition,\n    initialValues,\n    Delta,\n    Difficulty,\n    Direction,\n    DirectionKeyCodeMap,\n    GameStatus,\n    OppositeDirection,\n} from '../constants';\nimport {\n    initFields,\n    isCollision,\n    isEatingMyself,\n    getFoodPosition,\n} from '../utils';\n\nlet timer = null;\n\nconst unsubscribe = () => {\n    if (!timer) {\n        return;\n    }\n    clearInterval(timer);\n};\n\nconst useSnakeGame = () => {\n    const [fields, setFields] = useState(initialValues);\n    const [body, setBody] = useState([]);\n    const [status, setStatus] = useState(GameStatus.init);\n    const [direction, setDirection] = useState(Direction.up);\n    const [difficulty, setDifficulty] = useState(defaultDifficulty);\n    const [tick, setTick] = useState(0);\n\n    useEffect(() => {\n        setBody([initialPosition]);\n\n        // ゲームの中の時間を管理する\n        const interval = Difficulty[difficulty - 1];\n        timer = setInterval(() => {\n            setTick((tick) => tick + 1);\n        }, interval);\n        return unsubscribe;\n    }, [difficulty]);\n\n    useEffect(() => {\n        if (body.length === 0 || status !== GameStatus.playing) {\n            return;\n        }\n        const canContinue = handleMoving();\n        if (!canContinue) {\n            unsubscribe();\n            setStatus(GameStatus.gameover);\n        }\n    }, [tick]);\n\n    const start = () => setStatus(GameStatus.playing);\n\n    const stop = () => setStatus(GameStatus.suspended);\n\n    const reload = () => {\n        timer = setInterval(() => {\n            setTick((tick) => tick + 1);\n        }, defaultInterval);\n        setStatus(GameStatus.init);\n        setBody([initialPosition]);\n        setDirection(Direction.up);\n        setFields(initFields(fields.length, initialPosition));\n    };\n\n    const updateDirection = useCallback(\n        (newDirection) => {\n            if (status !== GameStatus.playing) {\n                return;\n            }\n            if (OppositeDirection[direction] === newDirection) {\n                return;\n            }\n            setDirection(newDirection);\n        },\n        [direction, status]\n    );\n\n    const updateDifficulty = useCallback(\n        (difficulty) => {\n            if (status !== GameStatus.init) {\n                return;\n            }\n            if (difficulty < 1 || difficulty > Difficulty.length) {\n                return;\n            }\n            setDifficulty(difficulty);\n        },\n        [status]\n    );\n\n    useEffect(() => {\n        const handleKeyDown = (e) => {\n            const newDirection = DirectionKeyCodeMap[e.keyCode];\n            if (!newDirection) {\n                return;\n            }\n            updateDirection(newDirection);\n        };\n        document.addEventListener('keydown', handleKeyDown);\n        return () => document.removeEventListener('keydown', handleKeyDown);\n    }, [updateDirection]);\n\n    const handleMoving = () => {\n        const { x, y } = body[0];\n        const delta = Delta[direction];\n        const newPosition = {\n            x: x + delta.x,\n            y: y + delta.y,\n        };\n        if (\n            isCollision(fields.length, newPosition) ||\n            isEatingMyself(fields, newPosition)\n        ) {\n            return false;\n        }\n        const newBody = [...body];\n        if (fields[newPosition.y][newPosition.x] !== 'food') {\n            const removingTrack = newBody.pop();\n            fields[removingTrack.y][removingTrack.x] = '';\n        } else {\n            const food = getFoodPosition(fields.length, [...newBody, newPosition]);\n            fields[food.y][food.x] = 'food';\n        }\n        fields[newPosition.y][newPosition.x] = 'snake';\n        newBody.unshift(newPosition);\n\n        setBody(newBody);\n        setFields(fields);\n        return true;\n    };\n    return {\n        body,\n        difficulty,\n        fields,\n        status,\n        start,\n        stop,\n        reload,\n        updateDirection,\n        updateDifficulty,\n    };\n};\n\nexport default useSnakeGame;","import React from 'react';\nimport Title from './components/Title'\nimport Navigation from './components/Navigation';\nimport Field from './components/Field';\nimport Button from './components/Button';\nimport ManipulationPanel from './components/ManipulationPanel';\nimport useSnakeGame from './hooks/useSnakeGame'\n\nfunction App() {\n  const {\n    body,\n    difficulty,\n    fields,\n    start,\n    stop,\n    reload,\n    status,\n    updateDirection,\n    updateDifficulty,\n  } = useSnakeGame()\n\n\n  return (\n    <div className=\"App\">\n      <header className=\"header\">\n        <Title />\n        <Navigation\n          length={body.length}\n          difficulty={difficulty}\n          onChangeDifficulty={updateDifficulty}\n        />\n      </header>\n      <main className=\"main\">\n        <Field fields={fields} />\n      </main>\n      <footer className=\"footer\">\n        <Button\n          status={status}\n          onStop={stop}\n          onStart={start}\n          onRestart={reload}\n        />\n        <ManipulationPanel onChange={updateDirection} />\n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}